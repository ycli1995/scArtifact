% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/mergeMatrices.R
\name{mergeMatrices}
\alias{mergeMatrices}
\alias{mergeMatrices.default}
\alias{mergeMatrices.matrix}
\alias{mergeMatrices.dgCMatrix}
\alias{mergeMatrices.IterableMatrix}
\title{Merge Single-cell data matrices}
\usage{
mergeMatrices(x, y, ...)

\method{mergeMatrices}{default}(x, y, ...)

\method{mergeMatrices}{matrix}(x, y, ...)

\method{mergeMatrices}{dgCMatrix}(x, y, ...)

\method{mergeMatrices}{IterableMatrix}(x, y, ...)
}
\arguments{
\item{x}{A matrix object}

\item{y}{One or more matrices of the same class or coercible to the same
class as \code{x}}

\item{...}{Arguments passed to other metheds.}
}
\value{
A single matrix of type \code{class(x)}
}
\description{
Single-cell data matrices are mostly in cell-by-feature formation. In this
function, matrices are merged through \code{\link{cbind}}. The union of rows
for input matrices are used.
}
\note{
The column names along all the input matrices must be unique, or an error
will be raised.
}
\examples{
bpce1 <- load_example_sce()
bpce2 <- load_example_sce("unsorted")

colnames(bpce1) <- paste0("sorted_", colnames(bpce1))
colnames(bpce2) <- paste0("unsorted_", colnames(bpce2))

## matrix
mat <- mergeMatrices(as.matrix(counts(bpce1)), as.matrix(counts(bpce2)))

## dgCMatrix
## The matrix 'y' will be coerced to dgCMatrix
mat <- mergeMatrices(as(counts(bpce1), "dgCMatrix"), counts(bpce2))

## IterableMatrix
## The matrix 'y' will be coerced to IterableMatrix
mat <- mergeMatrices(counts(bpce1), as(counts(bpce2), "dgCMatrix"))

}
\seealso{
The manner of \code{mergeMatrices()} is actually the same as
\pkg{Seurat}'s \code{\link[SeuratObject]{merge}}
}
